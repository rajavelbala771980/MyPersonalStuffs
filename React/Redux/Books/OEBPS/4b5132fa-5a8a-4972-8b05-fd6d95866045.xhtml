<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />
<style type="text/css" title="ibis-book">
    #sbo-rt-content .chapter-number{font-weight:bold;font-size:8.3em;text-align:right;font-family:symbol}#sbo-rt-content .chapter-title{font-size:30pt;text-align:right}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:16pt;font-weight:bold}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:14pt;font-weight:bold}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:13pt;font-weight:bold}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:11pt;font-weight:normal;font-style:italic}#sbo-rt-content ul,#sbo-rt-content .packt_bullet{font-weight:normal;list-style-type:disc}#sbo-rt-content ol,#sbo-rt-content .packt_numbered{font-weight:normal}#sbo-rt-content .packt_normal{font-weight:normal}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-family:monospace;font-size:9pt;font-weight:normal;border-left:1px solid black;margin-left:20px;padding-left:5px;display:block;margin-bottom:.12in}#sbo-rt-content .packt_figref{font-size:10pt;font-weight:normal}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content .packt_tip{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/cfea789e-9199-4571-ab96-30413ef8104e.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content .packt_infobox{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/5a771380-02eb-4759-8e38-030f17f643b4.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-family:monospace;font-size:9pt;font-weight:normal}#sbo-rt-content .packt_italics{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content a,#sbo-rt-content .packt_url{font-family:monospace;font-size:9pt;font-weight:normal;text-decoration:none;word-break:break-all}#sbo-rt-content var,#sbo-rt-content .packt_inlinemsgid{display:none}#sbo-rt-content p,#sbo-rt-content .packt_para{text-align:left;font-size:11pt;line-height:17px}#sbo-rt-content .underline{text-decoration:underline}#sbo-rt-content .CDPImageAlign{width:100%;display:block}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{width:100%;display:block;margin-top:.18in;margin-bottom:.18in}#sbo-rt-content .CDPAlignCenter{text-align:center}#sbo-rt-content .CDPAlignLeft{text-align:left}#sbo-rt-content .CDPAlignRight{text-align:right}#sbo-rt-content .fm-editor-equation{border:none}#sbo-rt-content nav a.section{border-bottom:1px solid black;width:100%;display:block}#sbo-rt-content body table{border-collapse:collapse}#sbo-rt-content body table td{border:1px solid black;padding:.31em .62em}#sbo-rt-content .header-title{font-size:2.5em}#sbo-rt-content img.inline-image{height:1em}#sbo-rt-content .chapter-title{font-size:2.5em}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:2em}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:1.5em}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:1.17em}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:1em}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-size:.8em;margin-left:1.25em;padding-left:.3em;margin-bottom:.01em}#sbo-rt-content .packt_figref{font-size:.62em}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:.68em}#sbo-rt-content .packt_tip{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content .packt_infobox{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-size:.75em}#sbo-rt-content .packt_italics{font-size:.9em}#sbo-rt-content a,#sbo-rt-content .packt_url{font-size:.7em}#sbo-rt-content p,#sbo-rt-content .packt_para{font-size:1em;line-height:1.06em}#sbo-rt-content .CDPImageAlign{max-width:100%;max-height:100%}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{margin-top:.01em;margin-bottom:.01em}
    </style>
<style type="text/css" id="font-styles">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-size: &lt;%= font_size %&gt; !important; }</style>
<style type="text/css" id="font-family">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-family: &lt;%= font_family %&gt; !important; }</style>
<style type="text/css" id="column-width">#sbo-rt-content { max-width: &lt;%= column_width %&gt;% !important; margin: 0 auto !important; }</style>

<style type="text/css">body{margin:1em;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Components</h1>
                </header>
            
            <article>
                
<p>Let's build our components. We'll start by breaking our component down into the main component, the <kbd>ToDo</kbd> list component, the <kbd>AddTodo</kbd> component, and the <kbd>Footer</kbd> component. The code must be self-explanatory.</p>
<p><kbd>App.js</kbd> is the main container component that gets the TODO states and passes them to the required components. We use the Redux <kbd>connect</kbd> function to connect our container and components. This should make sense, having read <a href="a46d70c3-5139-4a96-aa65-d3ac62cfe92f.xhtml" target="_blank">Chapter 1</a>, <em>Understanding Redux</em>. Let's examine our <kbd>Todo.js</kbd> file, as follows:</p>
<pre>//<em>Todo.js</em><br/>import React, { PureComponent } from "react";<br/>import PropTypes from "prop-types";<br/>import { deleteTodo, completeTodo } from "../actions/todos";<br/>import cn from "classnames";<br/><br/>export default class Todo extends PureComponent {<br/>  static propTypes = {<br/>    todo: PropTypes.object.isRequired,<br/>    dispatch: PropTypes.func.isRequired<br/>  };<br/><br/>  render() {<br/>    const { id, text, isCompleted } = this.props.todo.toObject();<br/>    const classNames = cn("todo", {<br/>      completed: isCompleted<br/>    });<br/>    return (<br/>      &lt;li className="list-group-item"&gt;<br/>        &lt;span<br/>          className={classNames}<br/>          onClick={() =&gt; this.props.dispatch(completeTodo(id))}<br/>        &gt;<br/>          {text}<br/>        &lt;/span&gt;<br/>        &lt;div<br/>          className="close"<br/>          onClick={() =&gt; this.props.dispatch(deleteTodo(id))}<br/>        &gt;<br/>          &amp;times;<br/>        &lt;/div&gt;<br/>      &lt;/li&gt;<br/>    );<br/>  }<br/>}</pre>
<p>There's nothing new, is there? We know what actions, reducers, and dispatch functions are. If you feel stuck, feel free to visit <a href="a46d70c3-5139-4a96-aa65-d3ac62cfe92f.xhtml" target="_blank">Chapter 1</a>, <em>Understanding Redux</em>, again. Hey, if it makes you feel better, no one can understand the whole concept in one go. So, it is okay to read the chapter again and again, until it starts to make sense to you. One important thing that I would like to point out is the use of <kbd>PureComponent</kbd>, instead of <kbd>Component</kbd>. Why do you think I used <kbd>PureComponent</kbd>? The React documentation site explains that in a decent way. Check out the following screenshot, and see if it makes sense to you:</p>
<p class="CDPAlignCenter CDPAlign"><img src="Images/d07fa3e0-4916-4fb5-bbff-563abe0b5477.png" style="width:33.33em;height:5.17em;" width="413" height="64"/></p>
<p>Our components for <kbd>AddToDo.js</kbd> can be written as follows. The code is self-explanatory, and it does not contain anything very complex:</p>
<pre><strong>//AddTodo.js</strong><br/>import React, { Component } from "react";<br/>import PropTypes from "prop-types";<br/><br/>import { addTodo } from "../actions/todos";<br/><br/>export default class AddTodo extends Component {<br/>  static propTypes = {<br/>    dispatch: PropTypes.func.isRequired<br/>  };<br/><br/>  shouldComponentUpdate() {<br/>    // component has no props or state change so it is safe to just return `false`<br/>    return false;<br/>  }<br/><br/>  addTodo(e) {<br/>    e.preventDefault();<br/>    const input = this.refs.todo;<br/>    const value = input.value.trim();<br/>    if (value) {<br/>      this.props.dispatch(addTodo(value));<br/>      input.value = "";<br/>    }<br/>  }<br/><br/>  render() {<br/>    return (<br/>      &lt;div&gt;<br/>        &lt;form onSubmit={e =&gt; this.addTodo(e)}&gt;<br/>          &lt;input<br/>            className="form-control"<br/>            type="text"<br/>            placeholder="Enter ToDo"<br/>            ref="todo"<br/>          /&gt;<br/>        &lt;/form&gt;<br/>        &lt;br /&gt;<br/>      &lt;/div&gt;<br/>    );<br/>  }<br/>}</pre>


            </article>

            
        </section>
    </div>



  </body>
</html>