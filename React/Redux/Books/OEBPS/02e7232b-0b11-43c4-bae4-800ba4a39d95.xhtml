<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />
<style type="text/css" title="ibis-book">
    #sbo-rt-content .chapter-number{font-weight:bold;font-size:8.3em;text-align:right;font-family:symbol}#sbo-rt-content .chapter-title{font-size:30pt;text-align:right}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:16pt;font-weight:bold}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:14pt;font-weight:bold}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:13pt;font-weight:bold}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:11pt;font-weight:normal;font-style:italic}#sbo-rt-content ul,#sbo-rt-content .packt_bullet{font-weight:normal;list-style-type:disc}#sbo-rt-content ol,#sbo-rt-content .packt_numbered{font-weight:normal}#sbo-rt-content .packt_normal{font-weight:normal}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-family:monospace;font-size:9pt;font-weight:normal;border-left:1px solid black;margin-left:20px;padding-left:5px;display:block;margin-bottom:.12in}#sbo-rt-content .packt_figref{font-size:10pt;font-weight:normal}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content .packt_tip{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/cfea789e-9199-4571-ab96-30413ef8104e.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content .packt_infobox{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/5a771380-02eb-4759-8e38-030f17f643b4.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-family:monospace;font-size:9pt;font-weight:normal}#sbo-rt-content .packt_italics{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content a,#sbo-rt-content .packt_url{font-family:monospace;font-size:9pt;font-weight:normal;text-decoration:none;word-break:break-all}#sbo-rt-content var,#sbo-rt-content .packt_inlinemsgid{display:none}#sbo-rt-content p,#sbo-rt-content .packt_para{text-align:left;font-size:11pt;line-height:17px}#sbo-rt-content .underline{text-decoration:underline}#sbo-rt-content .CDPImageAlign{width:100%;display:block}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{width:100%;display:block;margin-top:.18in;margin-bottom:.18in}#sbo-rt-content .CDPAlignCenter{text-align:center}#sbo-rt-content .CDPAlignLeft{text-align:left}#sbo-rt-content .CDPAlignRight{text-align:right}#sbo-rt-content .fm-editor-equation{border:none}#sbo-rt-content nav a.section{border-bottom:1px solid black;width:100%;display:block}#sbo-rt-content body table{border-collapse:collapse}#sbo-rt-content body table td{border:1px solid black;padding:.31em .62em}#sbo-rt-content .header-title{font-size:2.5em}#sbo-rt-content img.inline-image{height:1em}#sbo-rt-content .chapter-title{font-size:2.5em}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:2em}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:1.5em}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:1.17em}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:1em}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-size:.8em;margin-left:1.25em;padding-left:.3em;margin-bottom:.01em}#sbo-rt-content .packt_figref{font-size:.62em}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:.68em}#sbo-rt-content .packt_tip{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content .packt_infobox{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-size:.75em}#sbo-rt-content .packt_italics{font-size:.9em}#sbo-rt-content a,#sbo-rt-content .packt_url{font-size:.7em}#sbo-rt-content p,#sbo-rt-content .packt_para{font-size:1em;line-height:1.06em}#sbo-rt-content .CDPImageAlign{max-width:100%;max-height:100%}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{margin-top:.01em;margin-bottom:.01em}
    </style>
<style type="text/css" id="font-styles">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-size: &lt;%= font_size %&gt; !important; }</style>
<style type="text/css" id="font-family">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-family: &lt;%= font_family %&gt; !important; }</style>
<style type="text/css" id="column-width">#sbo-rt-content { max-width: &lt;%= column_width %&gt;% !important; margin: 0 auto !important; }</style>

<style type="text/css">body{margin:1em;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Installing Redux DevTools</h1>
                </header>
            
            <article>
                
<p class="mce-root">In this section, we are going to install Redux DevTools and understand how it works:</p>
<ol>
<li>Start with code from <a href="15bbf065-c5aa-499f-8176-a1d7650345b4.xhtml" target="_blank">Chapter 6</a>, <em>Extending Redux by Middleware</em>, which can be found in the <kbd>CH06</kbd> GitHub repository. The working code from this chapter can be downloaded from <kbd>CH07</kbd>. </li>
<li>Install <kbd>redux-devtools</kbd> using <kbd>yarn</kbd> or <kbd>npm</kbd>:</li>
</ol>
<pre style="color: black;padding-left: 60px"><strong>yarn add redux-devtools --dev --exact</strong><br/>or<strong> </strong><br/><strong>npm install --save-dev redux-devtools</strong></pre>
<ol start="3">
<li>Create a <kbd>DevTools</kbd> component inside the container (<kbd>app/containers/DevTools.js</kbd>):</li>
</ol>
<pre style="color: black;padding-left: 60px">import React from 'react';<br/>import { createDevTools } from 'redux-devtools';<br/>import LogMonitor from 'redux-devtools-log-monitor';<br/>import DockMonitor from 'redux-devtools-dock-monitor';<br/><br/>const DevTools = createDevTools(<br/>  &lt;DockMonitor<br/>    toggleVisibilityKey="ctrl-h"<br/>    changePositionKey="ctrl-q"<br/>    defaultIsVisible<br/>  &gt;<br/>    &lt;LogMonitor theme="tomorrow" /&gt;<br/>  &lt;/DockMonitor&gt;,<br/>);<br/><br/>export default DevTools;</pre>
<ol start="4">
<li class="mce-root"><span>Pass the <kbd>DevTools</kbd> component to the store. In our application, we configured the store inside the file called</span> <kbd>configureStore.js</kbd>, which is <span>inside the</span> <kbd>app</kbd> <span>folder. The added lines are highlighted for your convenience:</span></li>
</ol>
<pre style="color: black;padding-left: 60px">import { createStore, applyMiddleware, compose } from 'redux';<br/>import { fromJS } from 'immutable';<br/>import { routerMiddleware } from 'connected-react-router/immutable';<br/>import createSagaMiddleware from 'redux-saga';<br/>import createReducer from './reducers';<br/><strong>import DevTools from './containers/DevTools';</strong><br/><br/>const sagaMiddleware = createSagaMiddleware();<br/><br/>export default function configureStore(initialState = {}, history) {<br/>  const middlewares = [sagaMiddleware, routerMiddleware(history)];<br/><br/> const enhancers = [applyMiddleware(...middlewares)];<br/><br/>  const store = createStore(<br/>    createReducer(),<br/>    fromJS(initialState),<br/>    compose(<br/>      ...enhancers,<br/>      <strong>DevTools.instrument(),</strong><br/>    ),<br/>  );<br/><br/>  store.runSaga = sagaMiddleware.run;<br/>  store.injectedReducers = {};<br/>  store.injectedSagas = {};<br/><br/>  return store;<br/>}</pre>
<ol start="5">
<li>Render <kbd>&lt;DevTools&gt;</kbd> in the app. So, inside <kbd>app/app.js</kbd>, add the component. However, we do not want to show the <kbd>Dev</kbd> toolbox in the production environment:</li>
</ol>
<pre style="color: black;padding-left: 60px">const render = messages =&gt; {<br/>  ReactDOM.render(<br/>    &lt;Provider store={store}&gt;<br/>      &lt;LanguageProvider messages={messages}&gt;<br/>        &lt;ConnectedRouter history={history}&gt;<br/>          &lt;div&gt;<br/>            &lt;App /&gt;<br/>            <strong>&lt;DevTools /&gt;</strong><br/>          &lt;/div&gt;<br/>        &lt;/ConnectedRouter&gt;<br/>      &lt;/LanguageProvider&gt;<br/>    &lt;/Provider&gt;,<br/>    MOUNT_NODE,<br/>  );<br/>};</pre>
<p style="padding-left: 60px" class="mce-root"><span>It is better to create another component, something such as a</span> <kbd>Root.js</kbd> <span>component, that renders the root of the application:</span></p>
<pre style="color: black;padding-left: 90px"><span class="pl-k">if</span> (<span class="pl-c1">process</span>.<span class="pl-smi">env</span>.<span class="pl-c1">NODE_ENV</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">'</span>production<span class="pl-pds">'</span></span>) {
  <span class="pl-c1">module</span>.<span class="pl-smi">exports</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>./App.prod<span class="pl-pds">'</span></span>);
} <span class="pl-k">else</span> {
  <span class="pl-c1">module</span>.<span class="pl-smi">exports</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>./App.dev<span class="pl-pds">'</span></span>);
}</pre>
<p style="padding-left: 60px" class="mce-root"><span>Be sure to have two separate <kbd>App</kbd> components: one for development (<kbd>App.dev.js</kbd>) and one for production (<kbd>App.prod.js</kbd>). </span></p>
<p style="padding-left: 60px">The <kbd>App.prod.js</kbd> file will be used in the production version of the application. This is because we do not want to show the debugger in the production application:</p>
<pre style="color: black;padding-left: 60px">const render = messages =&gt; {<br/>  ReactDOM.render(<br/>    &lt;Provider store={store}&gt;<br/>      &lt;LanguageProvider messages={messages}&gt;<br/>        &lt;ConnectedRouter history={history}&gt;<br/>            &lt;App /&gt;<br/>          &lt;/div&gt;<br/>        &lt;/ConnectedRouter&gt;<br/>      &lt;/LanguageProvider&gt;<br/>    &lt;/Provider&gt;,<br/>    MOUNT_NODE,<br/>  );<br/>};</pre>
<p style="padding-left: 60px" class="mce-root"><kbd>App.dev.js</kbd><strong> </strong>will be used in the development version of the application. This is because, when we develop an application, we need to debug the application:</p>
<pre style="color: black;padding-left: 60px">const render = messages =&gt; {<br/>  ReactDOM.render(<br/>    &lt;Provider store={store}&gt;<br/>      &lt;LanguageProvider messages={messages}&gt;<br/>        &lt;ConnectedRouter history={history}&gt;<br/>          &lt;div&gt;<br/>            &lt;App /&gt;<br/>            <strong>&lt;DevTools /&gt;</strong><br/>          &lt;/div&gt;<br/>        &lt;/ConnectedRouter&gt;<br/>      &lt;/LanguageProvider&gt;<br/>    &lt;/Provider&gt;,<br/>    MOUNT_NODE,<br/>  );<br/>};</pre>
<ol start="6">
<li>Try to run the application. You should be able to see the following sidebar. <kbd>LogMonitor</kbd> on the right sidebar displays the history of actions and state changes:</li>
</ol>
<p class="CDPAlignCenter CDPAlign"><img src="Images/da62d136-3af9-420b-8906-ec31479a1615.png" width="1950" height="1226"/></p>
<div class="CDPAlignCenter CDPAlign packt_figref">Figure 7.1: Rendered Redux DevTools on the browser</div>
<p>The sidebar can be moved with <em>Ctrl</em> + <em>Q</em>. <kbd>LogMonitor</kbd> allows us to see the state changes. This helps us to get actual instances of state and see how the state is changing when an application changes. You can read more about <kbd>redux-devtools</kbd> on the documentation site. </p>


            </article>

            
        </section>
    </div>



  </body>
</html>