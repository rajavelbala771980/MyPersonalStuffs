<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />
<style type="text/css" title="ibis-book">
    #sbo-rt-content .chapter-number{font-weight:bold;font-size:8.3em;text-align:right;font-family:symbol}#sbo-rt-content .chapter-title{font-size:30pt;text-align:right}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:16pt;font-weight:bold}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:14pt;font-weight:bold}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:13pt;font-weight:bold}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:11pt;font-weight:normal;font-style:italic}#sbo-rt-content ul,#sbo-rt-content .packt_bullet{font-weight:normal;list-style-type:disc}#sbo-rt-content ol,#sbo-rt-content .packt_numbered{font-weight:normal}#sbo-rt-content .packt_normal{font-weight:normal}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-family:monospace;font-size:9pt;font-weight:normal;border-left:1px solid black;margin-left:20px;padding-left:5px;display:block;margin-bottom:.12in}#sbo-rt-content .packt_figref{font-size:10pt;font-weight:normal}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content .packt_tip{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/cfea789e-9199-4571-ab96-30413ef8104e.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content .packt_infobox{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/5a771380-02eb-4759-8e38-030f17f643b4.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-family:monospace;font-size:9pt;font-weight:normal}#sbo-rt-content .packt_italics{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content a,#sbo-rt-content .packt_url{font-family:monospace;font-size:9pt;font-weight:normal;text-decoration:none;word-break:break-all}#sbo-rt-content var,#sbo-rt-content .packt_inlinemsgid{display:none}#sbo-rt-content p,#sbo-rt-content .packt_para{text-align:left;font-size:11pt;line-height:17px}#sbo-rt-content .underline{text-decoration:underline}#sbo-rt-content .CDPImageAlign{width:100%;display:block}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{width:100%;display:block;margin-top:.18in;margin-bottom:.18in}#sbo-rt-content .CDPAlignCenter{text-align:center}#sbo-rt-content .CDPAlignLeft{text-align:left}#sbo-rt-content .CDPAlignRight{text-align:right}#sbo-rt-content .fm-editor-equation{border:none}#sbo-rt-content nav a.section{border-bottom:1px solid black;width:100%;display:block}#sbo-rt-content body table{border-collapse:collapse}#sbo-rt-content body table td{border:1px solid black;padding:.31em .62em}#sbo-rt-content .header-title{font-size:2.5em}#sbo-rt-content img.inline-image{height:1em}#sbo-rt-content .chapter-title{font-size:2.5em}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:2em}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:1.5em}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:1.17em}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:1em}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-size:.8em;margin-left:1.25em;padding-left:.3em;margin-bottom:.01em}#sbo-rt-content .packt_figref{font-size:.62em}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:.68em}#sbo-rt-content .packt_tip{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content .packt_infobox{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-size:.75em}#sbo-rt-content .packt_italics{font-size:.9em}#sbo-rt-content a,#sbo-rt-content .packt_url{font-size:.7em}#sbo-rt-content p,#sbo-rt-content .packt_para{font-size:1em;line-height:1.06em}#sbo-rt-content .CDPImageAlign{max-width:100%;max-height:100%}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{margin-top:.01em;margin-bottom:.01em}
    </style>
<style type="text/css" id="font-styles">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-size: &lt;%= font_size %&gt; !important; }</style>
<style type="text/css" id="font-family">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-family: &lt;%= font_family %&gt; !important; }</style>
<style type="text/css" id="column-width">#sbo-rt-content { max-width: &lt;%= column_width %&gt;% !important; margin: 0 auto !important; }</style>

<style type="text/css">body{margin:1em;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Higher-order functions</h1>
                </header>
            
            <article>
                
<p>Now, let's look at one the most common scenarios. Suppose that we have a container component called <kbd>AlertContainer</kbd> that connects with React components using the <kbd>connect</kbd> function. This should not appear alien to you by now:</p>
<pre>import React, { Component } from "react";<br/>import { connect } from "react-redux";<br/>import Alerts from "./Alerts";<br/>class AlertContainer extends Component {<br/> componentDidMount() {<br/>   this.props.dispatch({ type: "REQUEST_ALERTS_LISTS" });<br/> }<br/> render() {<br/>   return &lt;Alerts /&gt;;<br/> }<br/>}<br/>export default connect()(AlertContainer);</pre>
<p>We have simply used the <kbd>connect</kbd> function from <kbd>react-redux</kbd> to connect a React component. The <kbd>Alert</kbd> components can be as simple as the following:</p>
<div>
<pre>import React from "react";<br/>const Alerts = () =&gt; (<br/> &lt;ul&gt;<br/>   &lt;li&gt;This is notification one.&lt;/li&gt;<br/>   &lt;li&gt;This is notification two.&lt;/li&gt;<br/> &lt;/ul&gt;<br/>);<br/>export default Alerts;</pre></div>
<p>We are leaving how to test <kbd>Alert</kbd> components to you. Now, let's test the <kbd>AlertContainer.js</kbd> file. Create the test file, <kbd>AlertContainer-test.js</kbd>, as follows:</p>
<div>
<pre>import React from "react";<br/>import renderer from "react-test-renderer";<br/>import AlertContainer from "../AlertContainer";<br/>jest.mock("react-redux", () =&gt; ({<br/> connect: () =&gt; obj =&gt; obj<br/>}));<br/>jest.mock("../Alerts", () =&gt; "Alerts");<br/>it("should render correctly", () =&gt; {<br/> const dispatch = jest.fn();<br/> const component = renderer.create(&lt;AlertContainer dispatch={dispatch} /&gt;);<br/> expect(component.toJSON()).toMatchSnapshot();<br/> expect(dispatch).toHaveBeenCalled();<br/> expect(dispatch.mock.calls).toMatchSnapshot(<br/>   "dispatch function was called correctly"<br/> );<br/>});</pre></div>
<p>It is getting confusing, huh? Well, most of the code should make sense to you, except for the mocking of <kbd>react-redux</kbd>. The <kbd>connect</kbd> function from <kbd>react-redux</kbd> is a very complex function, with several functionalities. In our container component, we are using the <kbd>connect</kbd> function to link our container component to the <kbd>Alert</kbd> component. So, from Redux, I am just consuming the <kbd>connect</kbd> function. As we mentioned before, we can assume that third-party libraries are well tested and correct. Assuming that the <kbd>react-redux</kbd> library is well tested, we can safely mock <kbd>react-redux</kbd>. In our <kbd>AlertContainer</kbd> component, we are only using the <kbd>connect</kbd> function. So, we just mocked the entire <kbd>redux-library</kbd>, saying that it has a <kbd>connect</kbd> function, which is simply a function. Jest provides <kbd>jest.fn()</kbd> to mock a function (<a href="https://jestjs.io/docs/en/mock-functions">https://jestjs.io/docs/en/mock-functions</a>). You may have questions, such as: What if we are using other functions? Well, in any container, we are not likely to use all of the functions. So, we can mock the functions used in the container. Moreover, there are other ways that you can mock <kbd>react-redux</kbd>. Try to explore those other ways.</p>


            </article>

            
        </section>
    </div>



  </body>
</html>