<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style02.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style03.css" rel="stylesheet" type="text/css" />
<style type="text/css" title="ibis-book">
    #sbo-rt-content .chapter-number{font-weight:bold;font-size:8.3em;text-align:right;font-family:symbol}#sbo-rt-content .chapter-title{font-size:30pt;text-align:right}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:16pt;font-weight:bold}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:14pt;font-weight:bold}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:13pt;font-weight:bold}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:11pt;font-weight:normal;font-style:italic}#sbo-rt-content ul,#sbo-rt-content .packt_bullet{font-weight:normal;list-style-type:disc}#sbo-rt-content ol,#sbo-rt-content .packt_numbered{font-weight:normal}#sbo-rt-content .packt_normal{font-weight:normal}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-family:monospace;font-size:9pt;font-weight:normal;border-left:1px solid black;margin-left:20px;padding-left:5px;display:block;margin-bottom:.12in}#sbo-rt-content .packt_figref{font-size:10pt;font-weight:normal}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content .packt_tip{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/cfea789e-9199-4571-ab96-30413ef8104e.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content .packt_infobox{font-size:11pt;font-weight:normal;color:black;font-style:italic;background-image:url(../assets/5a771380-02eb-4759-8e38-030f17f643b4.png);background-position:left center;background-repeat:no-repeat;background-size:.6in;margin-left:20px;margin-right:20px;padding-left:.7in;min-height:.75in;}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-family:monospace;font-size:9pt;font-weight:normal}#sbo-rt-content .packt_italics{font-size:11pt;font-weight:normal;color:black;font-style:italic}#sbo-rt-content a,#sbo-rt-content .packt_url{font-family:monospace;font-size:9pt;font-weight:normal;text-decoration:none;word-break:break-all}#sbo-rt-content var,#sbo-rt-content .packt_inlinemsgid{display:none}#sbo-rt-content p,#sbo-rt-content .packt_para{text-align:left;font-size:11pt;line-height:17px}#sbo-rt-content .underline{text-decoration:underline}#sbo-rt-content .CDPImageAlign{width:100%;display:block}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{width:100%;display:block;margin-top:.18in;margin-bottom:.18in}#sbo-rt-content .CDPAlignCenter{text-align:center}#sbo-rt-content .CDPAlignLeft{text-align:left}#sbo-rt-content .CDPAlignRight{text-align:right}#sbo-rt-content .fm-editor-equation{border:none}#sbo-rt-content nav a.section{border-bottom:1px solid black;width:100%;display:block}#sbo-rt-content body table{border-collapse:collapse}#sbo-rt-content body table td{border:1px solid black;padding:.31em .62em}#sbo-rt-content .header-title{font-size:2.5em}#sbo-rt-content img.inline-image{height:1em}#sbo-rt-content .chapter-title{font-size:2.5em}#sbo-rt-content h1,#sbo-rt-content .packt_head1{font-size:2em}#sbo-rt-content h2,#sbo-rt-content .packt_head2{font-size:1.5em}#sbo-rt-content h3,#sbo-rt-content .packt_head3{font-size:1.17em}#sbo-rt-content h4,#sbo-rt-content .packt_head4{font-size:1em}#sbo-rt-content code,#sbo-rt-content .packt_code,#sbo-rt-content .packt_codeblock,#sbo-rt-content pre{font-size:.8em;margin-left:1.25em;padding-left:.3em;margin-bottom:.01em}#sbo-rt-content .packt_figref{font-size:.62em}#sbo-rt-content q,#sbo-rt-content .packt_quote{font-size:.68em}#sbo-rt-content .packt_tip{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content .packt_infobox{font-size:.68em;background-size:2.5em;margin-left:1.25em;margin-right:1.25em;padding-left:3em;min-height:2.5em}#sbo-rt-content kbd,#sbo-rt-content .packt_action{font-size:.75em}#sbo-rt-content .packt_italics{font-size:.9em}#sbo-rt-content a,#sbo-rt-content .packt_url{font-size:.7em}#sbo-rt-content p,#sbo-rt-content .packt_para{font-size:1em;line-height:1.06em}#sbo-rt-content .CDPImageAlign{max-width:100%;max-height:100%}#sbo-rt-content div.CDPAlign,#sbo-rt-content p.CDPAlign{margin-top:.01em;margin-bottom:.01em}
    </style>
<style type="text/css" id="font-styles">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-size: &lt;%= font_size %&gt; !important; }</style>
<style type="text/css" id="font-family">#sbo-rt-content, #sbo-rt-content p, #sbo-rt-content div { font-family: &lt;%= font_family %&gt; !important; }</style>
<style type="text/css" id="column-width">#sbo-rt-content { max-width: &lt;%= column_width %&gt;% !important; margin: 0 auto !important; }</style>

<style type="text/css">body{margin:1em;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content"><section>

                            <header>
                    <h1 class="header-title">Connecting with Redux</h1>
                </header>
            
            <article>
                
<p>Now, we need to connect the React component with Redux. For this, we use the function connect from: <kbd>react-redux</kbd>. We've already used these functions in <a href="a46d70c3-5139-4a96-aa65-d3ac62cfe92f.xhtml" target="_blank">Chapter 1</a>, <em>Understanding Redux</em>. Let's modify our container, as shown in the following code:</p>
<pre>import React, { Component } from 'react';<br/>import { connect } from 'react-redux';<br/>import { compose } from 'redux';<br/>import Form from './Form';<br/>import { onRegisterRequest } from './actions';<br/><br/>class RegisterPage extends Component {<br/>  render() {<br/>    return (<br/>      &lt;div className="register-containers"&gt;<br/>           &lt;Form onSubmit={this.props.onSubmit} /&gt;<br/>      &lt;/div&gt;<br/>    );<br/>  }<br/>}<br/><br/>export const mapDispatchToProps = dispatch =&gt; ({<br/>  onSubmit: e =&gt; dispatch(onRegisterRequest(e.toJS())),<br/>});<br/><br/>const withConnect = connect(<br/>  null,<br/>  mapDispatchToProps,<br/>);<br/><br/>export default compose(<br/>  withConnect,<br/>)(RegisterPage);</pre>
<p>There are several things going on here. Let's try to break down the code into understandable steps, as follows:</p>
<ol>
<li style="font-weight: 400">The React <kbd>RegisterPage</kbd> component displays the form as shown in <em>Figure</em> <em>5.3</em>. We are connecting the component with Redux. To do so, we use the connect function from <kbd>react-redux</kbd>, which connects the React component with the Redux store. As described in their documentation website, <kbd>connect</kbd> can take four parameters (<a href="https://react-redux.js.org/api/connect#connect">https://react-redux.js.org/api/connect#connect</a>). Most of the time, we only have the need for <kbd>mapStateToProps</kbd> and <kbd>mapDispatchToProps</kbd>.</li>
<li style="font-weight: 400">As the name suggests, <kbd>mapStateToProps</kbd> takes the state as input and maps into individual props. When specified, <kbd>mapStateToProps</kbd> helps the wrapper component (<kbd>RegisterPage</kbd>) to subscribe to Redux store updates, meaning that if the store has updated this function will be called. In our case, we do need to map state to props for the register page, so we simply pass <kbd>null</kbd> for now.</li>
<li style="font-weight: 400">Similarly, <kbd>mapDispatchToProps</kbd> is the second parameter for <kbd>connect</kbd>, which may either be an <kbd>object</kbd>, <kbd>function</kbd>, or <kbd>null</kbd>. As the name suggests, this function helps to create a <kbd>dispatch</kbd> function that can be passed to the component as <kbd>props</kbd>. For example, in our case, when a form is submitted, we want to dispatch the submit function.</li>
<li style="font-weight: 400">Now, we can connect the component with redux with the help of the <kbd>compose</kbd> function. We have discussed the <kbd>compose</kbd> function as a higher-order function in <a href="a46d70c3-5139-4a96-aa65-d3ac62cfe92f.xhtml">Chapter 1</a>, <em>Understanding Redux</em>.</li>
<li style="font-weight: 400">We defined the <kbd>onSubmit</kbd> function inside <kbd>mapDispatchToProps</kbd>, and passed <kbd>mapDispatchToProps</kbd> to connect as parameters. <kbd>onSubmit</kbd> is passed to the <kbd>Form</kbd> component as props.</li>
<li style="font-weight: 400">Now having these components connected, if you execute a console log inside an <kbd>onRegisterRequest</kbd> function inside your action and submit the form, you should see the log inside your browser as shown in <em>Figure 5.6</em>. If you see the log in your browser, that means you are following correctly so far, and you are on right track. If you are getting an error, please try to pause here and go back to previous chapters and try to follow the steps again:</li>
</ol>
<pre style="padding-left: 60px">export const onRegisterRequest = user =&gt;<br/>console.log(user) || { type: REGISTER_REQUEST, user };</pre>
<p class="mce-root">The browser will look like the following:</p>
<p class="CDPAlignCenter CDPAlign"><img src="Images/3198ffd9-dcd8-4da1-bf0d-3a2cd8991266.png" width="1560" height="800"/></p>
<div class="packt_figref CDPAlignCenter CDPAlign">Figure 5.7: Console log of the user registration information</div>


            </article>

            
        </section>
    </div>



  </body>
</html>